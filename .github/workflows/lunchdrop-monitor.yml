name: Lunchdrop Monitor

on:
  schedule:
    - cron: "30 14 * * 1-5"   # weekdays at 14:30 UTC
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Python with built-in pip cache
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # Cache Playwright browsers so downloads are fast after the first run
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies & browsers
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install-deps
          python -m playwright install chromium

      # Show exactly what the runner is using
      - name: Show commit and script head
        run: |
          echo "Commit from runner: $GITHUB_SHA"
          echo "----- First 20 lines of monitor_lunchdrop.py -----"
          sed -n '1,20p' monitor_lunchdrop.py

      # Optional: sanity ping Slack to confirm webhook works from Actions
      - name: Slack sanity ping
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -s -X POST -H 'Content-type: application/json' \
            --data '{"text":"âœ… GitHub Actions can reach Slack (sanity ping)."}' \
            "$SLACK_WEBHOOK_URL"

      - name: Run monitor
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          LOOKAHEAD_DAYS: ${{ secrets.LOOKAHEAD_DAYS }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          LUNCHDROP_EMAIL: ${{ secrets.LUNCHDROP_EMAIL }}
          LUNCHDROP_PASSWORD: ${{ secrets.LUNCHDROP_PASSWORD }}
          HEADLESS: "true"
          VERBOSE: "true"
          SEND_EMPTY_SLACK: "true"
          CSS_CARD_SELECTORS: ""         # force fallback (no selector) while testing
          MIN_CARD_COUNT: "1"
        run: python monitor_lunchdrop.py
