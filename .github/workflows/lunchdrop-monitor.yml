name: Lunchdrop Monitor

on:
  schedule:
    # 9:30 AM CT
    - cron: "30 14 * * 1-5"
    # 12:00 PM CT
    - cron: "0 17 * * 1-5"
    # 4:00 PM CT
    - cron: "0 21 * * 1-5"
  workflow_dispatch: {}
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python (with pip cache)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies & browsers
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install-deps
          python -m playwright install chromium

      # ðŸ”§ Rolling caches for state & auth
      - name: Restore state cache
        id: state-cache
        uses: actions/cache@v4
        with:
          path: .ld_state
          key: lunchdrop-state-${{ github.run_id }}
          restore-keys: |
            lunchdrop-state-

      - name: Restore auth cache
        id: auth-cache
        uses: actions/cache@v4
        with:
          path: .auth
          key: lunchdrop-auth-${{ github.run_id }}
          restore-keys: |
            lunchdrop-auth-

      - name: Show key env (safe)
        run: |
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "BASE_URL=${BASE_URL}"
          echo "SIGNIN_URL=${SIGNIN_URL}"
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          SIGNIN_URL: ${{ vars.SIGNIN_URL }}

      - name: List restored state files
        run: |
          echo "== .ld_state contents =="
          ls -la .ld_state || true
          echo "== sample json =="
          jq -c '.' .ld_state/*.json 2>/dev/null | head -n 3 || true

      - name: Run monitor
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          SIGNIN_URL: ${{ vars.SIGNIN_URL }}
          LOOKAHEAD_DAYS: ${{ secrets.LOOKAHEAD_DAYS }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          LUNCHDROP_EMAIL: ${{ secrets.LUNCHDROP_EMAIL }}
          LUNCHDROP_PASSWORD: ${{ secrets.LUNCHDROP_PASSWORD }}
          HEADLESS: "true"
          VERBOSE: "true"
          SUMMARY_ONLY: "false"
          SEND_HEARTBEAT: "true"
        run: python monitor_lunchdrop.py

      - name: Upload artifacts (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lunchdrop-artifacts
          path: artifacts/*
          if-no-files-found: ignore

